{"version":3,"file":"blocks/page-header/index.js","mappings":";;;;;;;;;;;AAAA;;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;;;;;;ACNoD;AAC+B;AACrB;AAC7B;AACE;AACf;AAAA;AAEpBA,oEAAiB,CAACM,6CAAU,EAAE;EAC1BS,IAAIA,CAAC;IAACC,UAAU;IAAEC;EAAa,CAAC,EAAC;IAC7B,MAAMC,SAAS,GAAGjB,sEAAa,CAAC,CAAC;IACjC,MAAM;MAACkB,OAAO;MAACC;IAAY,CAAC,GAAGJ,UAAU;IACzC,oBACIH,uDAAA,CAAAF,uDAAA;MAAAU,QAAA,gBACIZ,sDAAA,CAACN,sEAAiB;QAAAkB,QAAA,eACdZ,sDAAA,CAACL,4DAAS;UAACkB,KAAK,EAAEf,mDAAE,CAAC,SAAS,EAAC,YAAY,CAAE;UAAAc,QAAA,eACzCZ,sDAAA,CAACJ,gEAAa;YACVkB,KAAK,EAAIhB,mDAAE,CAAC,eAAe,EAAC,YAAY,CAAE;YAC1CiB,OAAO,EAAEJ,YAAa;YACtBK,QAAQ,EAAEC,QAAQ,IAAIT,aAAa,CAAC;cAACG,YAAY,EAACM;YAAQ,CAAC,CAAE;YAC7DC,IAAI,EAAGP,YAAY,GAAGb,mDAAE,CAAC,gBAAgB,EAAC,YAAY,CAAC,GAAGA,mDAAE,CAAC,sBAAsB,EAAC,YAAY;UAAE,CACrG;QAAC,CACK;MAAC,CACG,CAAC,eACrBE,sDAAA;QAAA,GAASS,SAAS;QAAAG,QAAA,eACbZ,sDAAA;UAAKmB,SAAS,EAAC,mBAAmB;UAAAP,QAAA,EAE5BD,YAAY,gBACXX,sDAAA;YAAAY,QAAA,EAAKd,mDAAE,CAAC,yBAAyB,EAAE,YAAY;UAAC,CAAK,CAAC,gBAEtDE,sDAAA,CAACP,6DAAQ;YACR2B,OAAO,EAAC,IAAI;YACZC,WAAW,EAAEvB,mDAAE,CAAC,SAAS,EAAE,aAAa,CAAE;YAC1CwB,KAAK,EAAEZ,OAAQ;YACfM,QAAQ,EAAEC,QAAQ,IAAIT,aAAa,CAAC;cAACE,OAAO,EAACO;YAAQ,CAAC;UAAE,CAC3D;QAAC,CAED;MAAC,CACL,CAAC;IAAA,CACR,CAAC;EAEX;AACJ,CAAC,CAAC,C","sources":["webpack://block-plus/./src/blocks/page-header/main.css?6401","webpack://block-plus/external window \"ReactJSXRuntime\"","webpack://block-plus/external window [\"wp\",\"blockEditor\"]","webpack://block-plus/external window [\"wp\",\"blocks\"]","webpack://block-plus/external window [\"wp\",\"components\"]","webpack://block-plus/external window [\"wp\",\"i18n\"]","webpack://block-plus/webpack/bootstrap","webpack://block-plus/webpack/runtime/compat get default export","webpack://block-plus/webpack/runtime/define property getters","webpack://block-plus/webpack/runtime/hasOwnProperty shorthand","webpack://block-plus/webpack/runtime/make namespace object","webpack://block-plus/./src/blocks/page-header/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport {};","module.exports = window[\"ReactJSXRuntime\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"i18n\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import {registerBlockType} from '@wordpress/blocks';\nimport {useBlockProps, RichText, InspectorControls} from '@wordpress/block-editor';\nimport {PanelBody, ToggleControl} from '@wordpress/components' ;\nimport block from './block.json';\nimport {__} from '@wordpress/i18n';\nimport './main.css';\n\nregisterBlockType(block.name, {\n    edit({attributes, setAttributes}){\n        const blockProp = useBlockProps()\n        const {content,showCategory} = attributes\n        return (\n            <>\n                <InspectorControls>\n                    <PanelBody title={__('General','block-plus')}>\n                        <ToggleControl\n                            label = {__('Show Category','block-plus')}\n                            checked={showCategory}\n                            onChange={newValue => setAttributes({showCategory:newValue})}\n                            help={ showCategory ? __(\"Category Shown\",'block-plus') : __(\"Custom Content Shown\",'block-plus')}\n                        />\n                    </PanelBody>\n                </InspectorControls>\n               <div {...blockProp}>\n                    <div className=\"inner-page-header\">\n                        {\n                          showCategory ?\n                           <h1>{__('Category: Some Category', 'block-plus')}</h1>\n                           :\n                           <RichText\n                            tagName='h1'\n                            placeholder={__('Heading', 'block-plus ')}\n                            value={content}\n                            onChange={newValue => setAttributes({content:newValue})}\n                        />\n                        }         \n                    </div>\n                </div> \n            </>\n        )\n    }\n})"],"names":["registerBlockType","useBlockProps","RichText","InspectorControls","PanelBody","ToggleControl","block","__","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","name","edit","attributes","setAttributes","blockProp","content","showCategory","children","title","label","checked","onChange","newValue","help","className","tagName","placeholder","value"],"sourceRoot":""}